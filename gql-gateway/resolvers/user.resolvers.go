package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.70

import (
	"context"
	"fmt"
	"strconv"

	"github.com/godfreyowidi/tiwabet-backend/gql-gateway/graph"
	model "github.com/godfreyowidi/tiwabet-backend/gql-gateway/model/dao"
)

// ID is the resolver for the id field.
func (r *userResolver) ID(ctx context.Context, obj *model.User) (int, error) {
	id, err := strconv.Atoi(obj.ID)
	if err != nil {
		return 0, fmt.Errorf("invalid user ID format: %v", err)
	}
	return id, nil
}

// User returns graph.UserResolver implementation.
func (r *Resolver) User() graph.UserResolver { return &userResolver{r} }

type userResolver struct{ *Resolver }
